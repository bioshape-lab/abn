[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neurometry"
dynamic = ["version"]
authors = [
    {name = "GI Authors", email = "facosta@ucsb.edu"}
]
readme = "README.md"
description = "Geometric Intelligence"
license = {file = "LICENSE.txt"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
]
requires-python = ">= 3.9"
dependencies=[
    "adjustText",
    "cython",
    "fastparquet",
    "gdown",
    "jupyterlab",
    "kneed",
    "pip",
    "pandas",
    "plotly",
    "pycortex",
    "matplotlib",
    "nibabel",
    "numpy",
    "scikit-image",
    "scikit-learn",
    "seaborn",
    "torch",
    "torchmetrics",
    "torchinfo",
    "geomstats @ git+https://github.com/geomstats/geomstats.git",
    "torchlens @ git+https://github.com/johnmarktaylor91/torchlens.git",
    "netrep @ git+https://github.com/ahwillia/netrep.git"
]

[project.optional-dependencies]
doc = [
    "jupyter",
    "nbsphinx",
    "nbsphinx_link",
    "numpydoc",
    "sphinx",
    "sphinx_gallery",
    "pydata-sphinx-theme"
]
lint = [
    "pre-commit",
    "ruff"
]
test = [
    "pytest",
    "pytest-cov",
    "coverage",
    "jupyter",

    # mypy and typing stubs
    "mypy > 1.6.0",
    "pandas-stubs",
    "types-requests"
]
gpu = ["cupy-cuda11x"]

dev = ["neurometry[test, lint]"]
all = ["neurometry[doc, dev]",]

[project.urls]
homepage="https://github.com/geometric-intelligence/neurometry"
repository="https://github.com/geometric-intelligence/neurometry"

[tool.ruff]
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F", # pyflakes errors
    "E", # code style
    "W", # warnings
    "I", # import order
    "UP", # pyupgrade rules
    "B", # bugbear rules
    "PIE", # pie rules
    "Q", # quote rules
    "RET", # return rules
    "SIM", # code simplifications
    "NPY", # numpy rules
    "PERF", # performance rules
    "RUF", # miscellaneous rules
]
ignore = [
    "E501",    # line too long
    "PERF203", # allow try-except within loops
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]

[tool.setuptools.dynamic]
version = {attr = "neurometry.__version__"}

[tool.setuptools.packages.find]
include = [
    "neurometry",
    "neurometry.*"
]

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
disable_error_code = ["import-untyped"]
plugins = "numpy.typing.mypy_plugin"

[tool.pytest.ini_options]
addopts = "--capture=no"

[tool.coverage.report]
exclude_lines = ["pragma: not covered", "@overload"]

[tool.numpydoc_validation]
checks = [
    "all",
    "GL01",
    "ES01",
    "EX01",
    "SA01"
]
exclude = [
    '\.__init__$',
]

[tool.pip]
extra-index-url = "https://pypi.org/simple"

[[tool.pip.dependencies]]
name = "giotto-ph"
version = "*"

[[tool.pip.dependencies]]
name = "hyperopt"
version = "0.2.5"

[[tool.pip.dependencies]]
name = "mat73"
version = "*"

[[tool.pip.dependencies]]
name = "ray[tune]"
version = "*"

[[tool.pip.dependencies]]
name = "wandb"
version = "*"

[[tool.pip.dependencies]]
name = "mtalg"
version = "*"